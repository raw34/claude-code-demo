version: '3.8'

services:
  # MySQL数据库服务
  database:
    image: mysql:8.0
    container_name: user-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: user_db
      MYSQL_USER: ${DB_USER:-userapp}
      MYSQL_PASSWORD: ${DB_PASSWORD:-userpassword}
    ports:
      - "3306:3306"  # 暴露端口供本地开发连接
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - user-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: user-redis
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispassword}
    ports:
      - "6379:6379"  # 暴露端口供本地开发连接
    volumes:
      - redis_data:/data
    networks:
      - user-net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 5s
      retries: 10

  # Go后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: user-api
    restart: always
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DB_HOST: database
      DB_PORT: 3306
      DB_USER: ${DB_USER:-userapp}
      DB_PASSWORD: ${DB_PASSWORD:-userpassword}
      DB_NAME: user_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispassword}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here}
      API_PORT: 8080
      GIN_MODE: ${GIN_MODE:-release}
    networks:
      - user-net
    volumes:
      - ./backend:/app
    command: ["/app/server"]

  # Nginx前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: user-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - user-net
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

networks:
  user-net:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local